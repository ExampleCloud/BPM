#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pkurg.PWorldBPM.WorkFlowRule
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BPM")]
	public partial class WorkFlowRuleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertWR_Setting(WR_Setting instance);
    partial void UpdateWR_Setting(WR_Setting instance);
    partial void DeleteWR_Setting(WR_Setting instance);
    partial void InsertWR_Attachment(WR_Attachment instance);
    partial void UpdateWR_Attachment(WR_Attachment instance);
    partial void DeleteWR_Attachment(WR_Attachment instance);
    partial void InsertWR_Category(WR_Category instance);
    partial void UpdateWR_Category(WR_Category instance);
    partial void DeleteWR_Category(WR_Category instance);
    partial void InsertWR_Focus(WR_Focus instance);
    partial void UpdateWR_Focus(WR_Focus instance);
    partial void DeleteWR_Focus(WR_Focus instance);
    partial void InsertWR_Rule(WR_Rule instance);
    partial void UpdateWR_Rule(WR_Rule instance);
    partial void DeleteWR_Rule(WR_Rule instance);
    partial void InsertWR_Permission(WR_Permission instance);
    partial void UpdateWR_Permission(WR_Permission instance);
    partial void DeleteWR_Permission(WR_Permission instance);
    #endregion
		
		public WorkFlowRuleDataContext() :
        base(global::Pkurg.PWorldBPM.WorkFlowRule.BPMConnectionString.ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WorkFlowRuleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkFlowRuleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkFlowRuleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkFlowRuleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<WR_Setting> WR_Setting
		{
			get
			{
				return this.GetTable<WR_Setting>();
			}
		}
		
		public System.Data.Linq.Table<WR_Attachment> WR_Attachment
		{
			get
			{
				return this.GetTable<WR_Attachment>();
			}
		}
		
		public System.Data.Linq.Table<WR_Category> WR_Category
		{
			get
			{
				return this.GetTable<WR_Category>();
			}
		}
		
		public System.Data.Linq.Table<WR_Focus> WR_Focus
		{
			get
			{
				return this.GetTable<WR_Focus>();
			}
		}
		
		public System.Data.Linq.Table<WR_Rule> WR_Rule
		{
			get
			{
				return this.GetTable<WR_Rule>();
			}
		}
		
		public System.Data.Linq.Table<V_WR_Rule> V_WR_Rule
		{
			get
			{
				return this.GetTable<V_WR_Rule>();
			}
		}
		
		public System.Data.Linq.Table<V_WR_RuleFocus> V_WR_RuleFocus
		{
			get
			{
				return this.GetTable<V_WR_RuleFocus>();
			}
		}
		
		public System.Data.Linq.Table<WR_Permission> WR_Permission
		{
			get
			{
				return this.GetTable<WR_Permission>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WR_Setting")]
	public partial class WR_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Category;
		
		private string _Name;
		
		private string _Value;
		
		private int _Record_Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnRecord_StatusChanging(int value);
    partial void OnRecord_StatusChanged();
    #endregion
		
		public WR_Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record_Status", DbType="Int NOT NULL")]
		public int Record_Status
		{
			get
			{
				return this._Record_Status;
			}
			set
			{
				if ((this._Record_Status != value))
				{
					this.OnRecord_StatusChanging(value);
					this.SendPropertyChanging();
					this._Record_Status = value;
					this.SendPropertyChanged("Record_Status");
					this.OnRecord_StatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WR_Attachment")]
	public partial class WR_Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _Attachment_GUID;
		
		private int _Rule_ID;
		
		private string _FileName;
		
		private int _FileSize;
		
		private string _FilePath;
		
		private string _Created_By;
		
		private string _Created_By_Name;
		
		private System.DateTime _Created_On;
		
		private int _Record_Status;
		
		private EntityRef<WR_Rule> _WR_Rule;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAttachment_GUIDChanging(System.Guid value);
    partial void OnAttachment_GUIDChanged();
    partial void OnRule_IDChanging(int value);
    partial void OnRule_IDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileSizeChanging(int value);
    partial void OnFileSizeChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnCreated_ByChanging(string value);
    partial void OnCreated_ByChanged();
    partial void OnCreated_By_NameChanging(string value);
    partial void OnCreated_By_NameChanged();
    partial void OnCreated_OnChanging(System.DateTime value);
    partial void OnCreated_OnChanged();
    partial void OnRecord_StatusChanging(int value);
    partial void OnRecord_StatusChanged();
    #endregion
		
		public WR_Attachment()
		{
			this._WR_Rule = default(EntityRef<WR_Rule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Attachment_GUID
		{
			get
			{
				return this._Attachment_GUID;
			}
			set
			{
				if ((this._Attachment_GUID != value))
				{
					this.OnAttachment_GUIDChanging(value);
					this.SendPropertyChanging();
					this._Attachment_GUID = value;
					this.SendPropertyChanged("Attachment_GUID");
					this.OnAttachment_GUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rule_ID", DbType="Int NOT NULL")]
		public int Rule_ID
		{
			get
			{
				return this._Rule_ID;
			}
			set
			{
				if ((this._Rule_ID != value))
				{
					if (this._WR_Rule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRule_IDChanging(value);
					this.SendPropertyChanging();
					this._Rule_ID = value;
					this.SendPropertyChanged("Rule_ID");
					this.OnRule_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="Int NOT NULL")]
		public int FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this.OnFileSizeChanging(value);
					this.SendPropertyChanging();
					this._FileSize = value;
					this.SendPropertyChanged("FileSize");
					this.OnFileSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Created_By
		{
			get
			{
				return this._Created_By;
			}
			set
			{
				if ((this._Created_By != value))
				{
					this.OnCreated_ByChanging(value);
					this.SendPropertyChanging();
					this._Created_By = value;
					this.SendPropertyChanged("Created_By");
					this.OnCreated_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Created_By_Name
		{
			get
			{
				return this._Created_By_Name;
			}
			set
			{
				if ((this._Created_By_Name != value))
				{
					this.OnCreated_By_NameChanging(value);
					this.SendPropertyChanging();
					this._Created_By_Name = value;
					this.SendPropertyChanged("Created_By_Name");
					this.OnCreated_By_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_On", DbType="DateTime NOT NULL")]
		public System.DateTime Created_On
		{
			get
			{
				return this._Created_On;
			}
			set
			{
				if ((this._Created_On != value))
				{
					this.OnCreated_OnChanging(value);
					this.SendPropertyChanging();
					this._Created_On = value;
					this.SendPropertyChanged("Created_On");
					this.OnCreated_OnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record_Status", DbType="Int NOT NULL")]
		public int Record_Status
		{
			get
			{
				return this._Record_Status;
			}
			set
			{
				if ((this._Record_Status != value))
				{
					this.OnRecord_StatusChanging(value);
					this.SendPropertyChanging();
					this._Record_Status = value;
					this.SendPropertyChanged("Record_Status");
					this.OnRecord_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WR_Rule_WR_Attachment", Storage="_WR_Rule", ThisKey="Rule_ID", OtherKey="ID", IsForeignKey=true)]
		public WR_Rule WR_Rule
		{
			get
			{
				return this._WR_Rule.Entity;
			}
			set
			{
				WR_Rule previousValue = this._WR_Rule.Entity;
				if (((previousValue != value) 
							|| (this._WR_Rule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WR_Rule.Entity = null;
						previousValue.WR_Attachment.Remove(this);
					}
					this._WR_Rule.Entity = value;
					if ((value != null))
					{
						value.WR_Attachment.Add(this);
						this._Rule_ID = value.ID;
					}
					else
					{
						this._Rule_ID = default(int);
					}
					this.SendPropertyChanged("WR_Rule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WR_Category")]
	public partial class WR_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Category_Name;
		
		private string _Category_Admin;
		
		private int _Record_Status;
		
		private EntitySet<WR_Rule> _WR_Rule;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategory_NameChanging(string value);
    partial void OnCategory_NameChanged();
    partial void OnCategory_AdminChanging(string value);
    partial void OnCategory_AdminChanged();
    partial void OnRecord_StatusChanging(int value);
    partial void OnRecord_StatusChanged();
    #endregion
		
		public WR_Category()
		{
			this._WR_Rule = new EntitySet<WR_Rule>(new Action<WR_Rule>(this.attach_WR_Rule), new Action<WR_Rule>(this.detach_WR_Rule));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category_Name
		{
			get
			{
				return this._Category_Name;
			}
			set
			{
				if ((this._Category_Name != value))
				{
					this.OnCategory_NameChanging(value);
					this.SendPropertyChanging();
					this._Category_Name = value;
					this.SendPropertyChanged("Category_Name");
					this.OnCategory_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Admin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category_Admin
		{
			get
			{
				return this._Category_Admin;
			}
			set
			{
				if ((this._Category_Admin != value))
				{
					this.OnCategory_AdminChanging(value);
					this.SendPropertyChanging();
					this._Category_Admin = value;
					this.SendPropertyChanged("Category_Admin");
					this.OnCategory_AdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record_Status", DbType="Int NOT NULL")]
		public int Record_Status
		{
			get
			{
				return this._Record_Status;
			}
			set
			{
				if ((this._Record_Status != value))
				{
					this.OnRecord_StatusChanging(value);
					this.SendPropertyChanging();
					this._Record_Status = value;
					this.SendPropertyChanged("Record_Status");
					this.OnRecord_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WR_Category_WR_Rule", Storage="_WR_Rule", ThisKey="ID", OtherKey="Category_ID")]
		public EntitySet<WR_Rule> WR_Rule
		{
			get
			{
				return this._WR_Rule;
			}
			set
			{
				this._WR_Rule.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WR_Rule(WR_Rule entity)
		{
			this.SendPropertyChanging();
			entity.WR_Category = this;
		}
		
		private void detach_WR_Rule(WR_Rule entity)
		{
			this.SendPropertyChanging();
			entity.WR_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WR_Focus")]
	public partial class WR_Focus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _Focus_ID;
		
		private System.Nullable<int> _Rule_ID;
		
		private string _Created_By;
		
		private string _Created_By_Name;
		
		private System.DateTime _Created_On;
		
		private int _Record_Status;
		
		private EntityRef<WR_Rule> _WR_Rule;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFocus_IDChanging(System.Guid value);
    partial void OnFocus_IDChanged();
    partial void OnRule_IDChanging(System.Nullable<int> value);
    partial void OnRule_IDChanged();
    partial void OnCreated_ByChanging(string value);
    partial void OnCreated_ByChanged();
    partial void OnCreated_By_NameChanging(string value);
    partial void OnCreated_By_NameChanged();
    partial void OnCreated_OnChanging(System.DateTime value);
    partial void OnCreated_OnChanged();
    partial void OnRecord_StatusChanging(int value);
    partial void OnRecord_StatusChanged();
    #endregion
		
		public WR_Focus()
		{
			this._WR_Rule = default(EntityRef<WR_Rule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Focus_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Focus_ID
		{
			get
			{
				return this._Focus_ID;
			}
			set
			{
				if ((this._Focus_ID != value))
				{
					this.OnFocus_IDChanging(value);
					this.SendPropertyChanging();
					this._Focus_ID = value;
					this.SendPropertyChanged("Focus_ID");
					this.OnFocus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rule_ID", DbType="Int")]
		public System.Nullable<int> Rule_ID
		{
			get
			{
				return this._Rule_ID;
			}
			set
			{
				if ((this._Rule_ID != value))
				{
					if (this._WR_Rule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRule_IDChanging(value);
					this.SendPropertyChanging();
					this._Rule_ID = value;
					this.SendPropertyChanged("Rule_ID");
					this.OnRule_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Created_By
		{
			get
			{
				return this._Created_By;
			}
			set
			{
				if ((this._Created_By != value))
				{
					this.OnCreated_ByChanging(value);
					this.SendPropertyChanging();
					this._Created_By = value;
					this.SendPropertyChanged("Created_By");
					this.OnCreated_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Created_By_Name
		{
			get
			{
				return this._Created_By_Name;
			}
			set
			{
				if ((this._Created_By_Name != value))
				{
					this.OnCreated_By_NameChanging(value);
					this.SendPropertyChanging();
					this._Created_By_Name = value;
					this.SendPropertyChanged("Created_By_Name");
					this.OnCreated_By_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_On", DbType="DateTime NOT NULL")]
		public System.DateTime Created_On
		{
			get
			{
				return this._Created_On;
			}
			set
			{
				if ((this._Created_On != value))
				{
					this.OnCreated_OnChanging(value);
					this.SendPropertyChanging();
					this._Created_On = value;
					this.SendPropertyChanged("Created_On");
					this.OnCreated_OnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record_Status", DbType="Int NOT NULL")]
		public int Record_Status
		{
			get
			{
				return this._Record_Status;
			}
			set
			{
				if ((this._Record_Status != value))
				{
					this.OnRecord_StatusChanging(value);
					this.SendPropertyChanging();
					this._Record_Status = value;
					this.SendPropertyChanged("Record_Status");
					this.OnRecord_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WR_Rule_WR_Focus", Storage="_WR_Rule", ThisKey="Rule_ID", OtherKey="ID", IsForeignKey=true)]
		public WR_Rule WR_Rule
		{
			get
			{
				return this._WR_Rule.Entity;
			}
			set
			{
				WR_Rule previousValue = this._WR_Rule.Entity;
				if (((previousValue != value) 
							|| (this._WR_Rule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WR_Rule.Entity = null;
						previousValue.WR_Focus.Remove(this);
					}
					this._WR_Rule.Entity = value;
					if ((value != null))
					{
						value.WR_Focus.Add(this);
						this._Rule_ID = value.ID;
					}
					else
					{
						this._Rule_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WR_Rule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WR_Rule")]
	public partial class WR_Rule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _Rule_GUID;
		
		private int _Category_ID;
		
		private System.Nullable<System.DateTime> _Publish_Date;
		
		private string _Title;
		
		private string _Summary;
		
		private string _Created_By;
		
		private string _Created_By_Name;
		
		private System.DateTime _Created_On;
		
		private string _Modified_By;
		
		private string _Modified_By_Name;
		
		private System.DateTime _Modified_On;
		
		private int _Record_Status;
		
		private EntitySet<WR_Attachment> _WR_Attachment;
		
		private EntitySet<WR_Focus> _WR_Focus;
		
		private EntityRef<WR_Category> _WR_Category;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRule_GUIDChanging(System.Guid value);
    partial void OnRule_GUIDChanged();
    partial void OnCategory_IDChanging(int value);
    partial void OnCategory_IDChanged();
    partial void OnPublish_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublish_DateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCreated_ByChanging(string value);
    partial void OnCreated_ByChanged();
    partial void OnCreated_By_NameChanging(string value);
    partial void OnCreated_By_NameChanged();
    partial void OnCreated_OnChanging(System.DateTime value);
    partial void OnCreated_OnChanged();
    partial void OnModified_ByChanging(string value);
    partial void OnModified_ByChanged();
    partial void OnModified_By_NameChanging(string value);
    partial void OnModified_By_NameChanged();
    partial void OnModified_OnChanging(System.DateTime value);
    partial void OnModified_OnChanged();
    partial void OnRecord_StatusChanging(int value);
    partial void OnRecord_StatusChanged();
    #endregion
		
		public WR_Rule()
		{
			this._WR_Attachment = new EntitySet<WR_Attachment>(new Action<WR_Attachment>(this.attach_WR_Attachment), new Action<WR_Attachment>(this.detach_WR_Attachment));
			this._WR_Focus = new EntitySet<WR_Focus>(new Action<WR_Focus>(this.attach_WR_Focus), new Action<WR_Focus>(this.detach_WR_Focus));
			this._WR_Category = default(EntityRef<WR_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rule_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Rule_GUID
		{
			get
			{
				return this._Rule_GUID;
			}
			set
			{
				if ((this._Rule_GUID != value))
				{
					this.OnRule_GUIDChanging(value);
					this.SendPropertyChanging();
					this._Rule_GUID = value;
					this.SendPropertyChanged("Rule_GUID");
					this.OnRule_GUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", DbType="Int NOT NULL")]
		public int Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					if (this._WR_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_ID = value;
					this.SendPropertyChanged("Category_ID");
					this.OnCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Publish_Date
		{
			get
			{
				return this._Publish_Date;
			}
			set
			{
				if ((this._Publish_Date != value))
				{
					this.OnPublish_DateChanging(value);
					this.SendPropertyChanging();
					this._Publish_Date = value;
					this.SendPropertyChanged("Publish_Date");
					this.OnPublish_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Created_By
		{
			get
			{
				return this._Created_By;
			}
			set
			{
				if ((this._Created_By != value))
				{
					this.OnCreated_ByChanging(value);
					this.SendPropertyChanging();
					this._Created_By = value;
					this.SendPropertyChanged("Created_By");
					this.OnCreated_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Created_By_Name
		{
			get
			{
				return this._Created_By_Name;
			}
			set
			{
				if ((this._Created_By_Name != value))
				{
					this.OnCreated_By_NameChanging(value);
					this.SendPropertyChanging();
					this._Created_By_Name = value;
					this.SendPropertyChanged("Created_By_Name");
					this.OnCreated_By_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_On", DbType="DateTime NOT NULL")]
		public System.DateTime Created_On
		{
			get
			{
				return this._Created_On;
			}
			set
			{
				if ((this._Created_On != value))
				{
					this.OnCreated_OnChanging(value);
					this.SendPropertyChanging();
					this._Created_On = value;
					this.SendPropertyChanged("Created_On");
					this.OnCreated_OnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Modified_By
		{
			get
			{
				return this._Modified_By;
			}
			set
			{
				if ((this._Modified_By != value))
				{
					this.OnModified_ByChanging(value);
					this.SendPropertyChanging();
					this._Modified_By = value;
					this.SendPropertyChanged("Modified_By");
					this.OnModified_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Modified_By_Name
		{
			get
			{
				return this._Modified_By_Name;
			}
			set
			{
				if ((this._Modified_By_Name != value))
				{
					this.OnModified_By_NameChanging(value);
					this.SendPropertyChanging();
					this._Modified_By_Name = value;
					this.SendPropertyChanged("Modified_By_Name");
					this.OnModified_By_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_On", DbType="DateTime NOT NULL")]
		public System.DateTime Modified_On
		{
			get
			{
				return this._Modified_On;
			}
			set
			{
				if ((this._Modified_On != value))
				{
					this.OnModified_OnChanging(value);
					this.SendPropertyChanging();
					this._Modified_On = value;
					this.SendPropertyChanged("Modified_On");
					this.OnModified_OnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record_Status", DbType="Int NOT NULL")]
		public int Record_Status
		{
			get
			{
				return this._Record_Status;
			}
			set
			{
				if ((this._Record_Status != value))
				{
					this.OnRecord_StatusChanging(value);
					this.SendPropertyChanging();
					this._Record_Status = value;
					this.SendPropertyChanged("Record_Status");
					this.OnRecord_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WR_Rule_WR_Attachment", Storage="_WR_Attachment", ThisKey="ID", OtherKey="Rule_ID")]
		public EntitySet<WR_Attachment> WR_Attachment
		{
			get
			{
				return this._WR_Attachment;
			}
			set
			{
				this._WR_Attachment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WR_Rule_WR_Focus", Storage="_WR_Focus", ThisKey="ID", OtherKey="Rule_ID")]
		public EntitySet<WR_Focus> WR_Focus
		{
			get
			{
				return this._WR_Focus;
			}
			set
			{
				this._WR_Focus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WR_Category_WR_Rule", Storage="_WR_Category", ThisKey="Category_ID", OtherKey="ID", IsForeignKey=true)]
		public WR_Category WR_Category
		{
			get
			{
				return this._WR_Category.Entity;
			}
			set
			{
				WR_Category previousValue = this._WR_Category.Entity;
				if (((previousValue != value) 
							|| (this._WR_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WR_Category.Entity = null;
						previousValue.WR_Rule.Remove(this);
					}
					this._WR_Category.Entity = value;
					if ((value != null))
					{
						value.WR_Rule.Add(this);
						this._Category_ID = value.ID;
					}
					else
					{
						this._Category_ID = default(int);
					}
					this.SendPropertyChanged("WR_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WR_Attachment(WR_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.WR_Rule = this;
		}
		
		private void detach_WR_Attachment(WR_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.WR_Rule = null;
		}
		
		private void attach_WR_Focus(WR_Focus entity)
		{
			this.SendPropertyChanging();
			entity.WR_Rule = this;
		}
		
		private void detach_WR_Focus(WR_Focus entity)
		{
			this.SendPropertyChanging();
			entity.WR_Rule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_WR_Rule")]
	public partial class V_WR_Rule
	{
		
		private int _ID;
		
		private System.Guid _Rule_GUID;
		
		private int _Category_ID;
		
		private string _Title;
		
		private string _Summary;
		
		private string _Created_By;
		
		private string _Created_By_Name;
		
		private System.DateTime _Created_On;
		
		private string _Modified_By;
		
		private string _Modified_By_Name;
		
		private System.DateTime _Modified_On;
		
		private int _Record_Status;
		
		private string _Category_Name;
		
		private string _Category_Admin;
		
		private System.Nullable<System.DateTime> _Publish_Date;
		
		public V_WR_Rule()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rule_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Rule_GUID
		{
			get
			{
				return this._Rule_GUID;
			}
			set
			{
				if ((this._Rule_GUID != value))
				{
					this._Rule_GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", DbType="Int NOT NULL")]
		public int Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					this._Category_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Created_By
		{
			get
			{
				return this._Created_By;
			}
			set
			{
				if ((this._Created_By != value))
				{
					this._Created_By = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Created_By_Name
		{
			get
			{
				return this._Created_By_Name;
			}
			set
			{
				if ((this._Created_By_Name != value))
				{
					this._Created_By_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_On", DbType="DateTime NOT NULL")]
		public System.DateTime Created_On
		{
			get
			{
				return this._Created_On;
			}
			set
			{
				if ((this._Created_On != value))
				{
					this._Created_On = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Modified_By
		{
			get
			{
				return this._Modified_By;
			}
			set
			{
				if ((this._Modified_By != value))
				{
					this._Modified_By = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Modified_By_Name
		{
			get
			{
				return this._Modified_By_Name;
			}
			set
			{
				if ((this._Modified_By_Name != value))
				{
					this._Modified_By_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_On", DbType="DateTime NOT NULL")]
		public System.DateTime Modified_On
		{
			get
			{
				return this._Modified_On;
			}
			set
			{
				if ((this._Modified_On != value))
				{
					this._Modified_On = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record_Status", DbType="Int NOT NULL")]
		public int Record_Status
		{
			get
			{
				return this._Record_Status;
			}
			set
			{
				if ((this._Record_Status != value))
				{
					this._Record_Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Name", DbType="NVarChar(50)")]
		public string Category_Name
		{
			get
			{
				return this._Category_Name;
			}
			set
			{
				if ((this._Category_Name != value))
				{
					this._Category_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Admin", DbType="NVarChar(50)")]
		public string Category_Admin
		{
			get
			{
				return this._Category_Admin;
			}
			set
			{
				if ((this._Category_Admin != value))
				{
					this._Category_Admin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Publish_Date
		{
			get
			{
				return this._Publish_Date;
			}
			set
			{
				if ((this._Publish_Date != value))
				{
					this._Publish_Date = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_WR_RuleFocus")]
	public partial class V_WR_RuleFocus
	{
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<System.Guid> _Rule_GUID;
		
		private System.Nullable<int> _Category_ID;
		
		private string _Title;
		
		private string _Summary;
		
		private string _Created_By;
		
		private string _Created_By_Name;
		
		private System.Nullable<System.DateTime> _Created_On;
		
		private string _Modified_By;
		
		private string _Modified_By_Name;
		
		private System.Nullable<System.DateTime> _Modified_On;
		
		private System.Nullable<int> _Record_Status;
		
		private string _Category_Name;
		
		private string _Category_Admin;
		
		private System.Nullable<System.DateTime> _Publish_Date;
		
		private string _Focus_By;
		
		private string _Focus_By_Name;
		
		public V_WR_RuleFocus()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rule_GUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Rule_GUID
		{
			get
			{
				return this._Rule_GUID;
			}
			set
			{
				if ((this._Rule_GUID != value))
				{
					this._Rule_GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", DbType="Int")]
		public System.Nullable<int> Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					this._Category_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(4000)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By", DbType="NVarChar(50)")]
		public string Created_By
		{
			get
			{
				return this._Created_By;
			}
			set
			{
				if ((this._Created_By != value))
				{
					this._Created_By = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By_Name", DbType="NVarChar(50)")]
		public string Created_By_Name
		{
			get
			{
				return this._Created_By_Name;
			}
			set
			{
				if ((this._Created_By_Name != value))
				{
					this._Created_By_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_On", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created_On
		{
			get
			{
				return this._Created_On;
			}
			set
			{
				if ((this._Created_On != value))
				{
					this._Created_On = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="NVarChar(50)")]
		public string Modified_By
		{
			get
			{
				return this._Modified_By;
			}
			set
			{
				if ((this._Modified_By != value))
				{
					this._Modified_By = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By_Name", DbType="NVarChar(50)")]
		public string Modified_By_Name
		{
			get
			{
				return this._Modified_By_Name;
			}
			set
			{
				if ((this._Modified_By_Name != value))
				{
					this._Modified_By_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_On", DbType="DateTime")]
		public System.Nullable<System.DateTime> Modified_On
		{
			get
			{
				return this._Modified_On;
			}
			set
			{
				if ((this._Modified_On != value))
				{
					this._Modified_On = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record_Status", DbType="Int")]
		public System.Nullable<int> Record_Status
		{
			get
			{
				return this._Record_Status;
			}
			set
			{
				if ((this._Record_Status != value))
				{
					this._Record_Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Name", DbType="NVarChar(50)")]
		public string Category_Name
		{
			get
			{
				return this._Category_Name;
			}
			set
			{
				if ((this._Category_Name != value))
				{
					this._Category_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Admin", DbType="NVarChar(50)")]
		public string Category_Admin
		{
			get
			{
				return this._Category_Admin;
			}
			set
			{
				if ((this._Category_Admin != value))
				{
					this._Category_Admin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Publish_Date
		{
			get
			{
				return this._Publish_Date;
			}
			set
			{
				if ((this._Publish_Date != value))
				{
					this._Publish_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Focus_By", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Focus_By
		{
			get
			{
				return this._Focus_By;
			}
			set
			{
				if ((this._Focus_By != value))
				{
					this._Focus_By = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Focus_By_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Focus_By_Name
		{
			get
			{
				return this._Focus_By_Name;
			}
			set
			{
				if ((this._Focus_By_Name != value))
				{
					this._Focus_By_Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WR_Permission")]
	public partial class WR_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Flow_Names;
		
		private string _Flow_Ids;
		
		private string _Allow_Depts;
		
		private string _Allow_Users;
		
		private string _Reject_Depts;
		
		private string _Reject_Users;
		
		private int _Record_Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFlow_NamesChanging(string value);
    partial void OnFlow_NamesChanged();
    partial void OnFlow_IdsChanging(string value);
    partial void OnFlow_IdsChanged();
    partial void OnAllow_DeptsChanging(string value);
    partial void OnAllow_DeptsChanged();
    partial void OnAllow_UsersChanging(string value);
    partial void OnAllow_UsersChanged();
    partial void OnReject_DeptsChanging(string value);
    partial void OnReject_DeptsChanged();
    partial void OnReject_UsersChanging(string value);
    partial void OnReject_UsersChanged();
    partial void OnRecord_StatusChanging(int value);
    partial void OnRecord_StatusChanged();
    #endregion
		
		public WR_Permission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flow_Names", DbType="NVarChar(500)")]
		public string Flow_Names
		{
			get
			{
				return this._Flow_Names;
			}
			set
			{
				if ((this._Flow_Names != value))
				{
					this.OnFlow_NamesChanging(value);
					this.SendPropertyChanging();
					this._Flow_Names = value;
					this.SendPropertyChanged("Flow_Names");
					this.OnFlow_NamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flow_Ids", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Flow_Ids
		{
			get
			{
				return this._Flow_Ids;
			}
			set
			{
				if ((this._Flow_Ids != value))
				{
					this.OnFlow_IdsChanging(value);
					this.SendPropertyChanging();
					this._Flow_Ids = value;
					this.SendPropertyChanged("Flow_Ids");
					this.OnFlow_IdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allow_Depts", DbType="NVarChar(2000)")]
		public string Allow_Depts
		{
			get
			{
				return this._Allow_Depts;
			}
			set
			{
				if ((this._Allow_Depts != value))
				{
					this.OnAllow_DeptsChanging(value);
					this.SendPropertyChanging();
					this._Allow_Depts = value;
					this.SendPropertyChanged("Allow_Depts");
					this.OnAllow_DeptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allow_Users", DbType="NVarChar(2000)")]
		public string Allow_Users
		{
			get
			{
				return this._Allow_Users;
			}
			set
			{
				if ((this._Allow_Users != value))
				{
					this.OnAllow_UsersChanging(value);
					this.SendPropertyChanging();
					this._Allow_Users = value;
					this.SendPropertyChanged("Allow_Users");
					this.OnAllow_UsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reject_Depts", DbType="NVarChar(2000)")]
		public string Reject_Depts
		{
			get
			{
				return this._Reject_Depts;
			}
			set
			{
				if ((this._Reject_Depts != value))
				{
					this.OnReject_DeptsChanging(value);
					this.SendPropertyChanging();
					this._Reject_Depts = value;
					this.SendPropertyChanged("Reject_Depts");
					this.OnReject_DeptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reject_Users", DbType="NVarChar(2000)")]
		public string Reject_Users
		{
			get
			{
				return this._Reject_Users;
			}
			set
			{
				if ((this._Reject_Users != value))
				{
					this.OnReject_UsersChanging(value);
					this.SendPropertyChanging();
					this._Reject_Users = value;
					this.SendPropertyChanged("Reject_Users");
					this.OnReject_UsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record_Status", DbType="Int NOT NULL")]
		public int Record_Status
		{
			get
			{
				return this._Record_Status;
			}
			set
			{
				if ((this._Record_Status != value))
				{
					this.OnRecord_StatusChanging(value);
					this.SendPropertyChanging();
					this._Record_Status = value;
					this.SendPropertyChanged("Record_Status");
					this.OnRecord_StatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
